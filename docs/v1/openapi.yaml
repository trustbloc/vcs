#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

openapi: 3.0.0
info:
  title: Verifiable Credential Service (VCS)
  version: 0.2.0
  description: TrustBloc VCS support credential issuance and verification using W3C VC-API along with OpenID4VC protocol for issuer/verifer interaction with Wallet.
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.txt'
  contact:
    name: TrustBloc team.
    email: hello@trustbloc.dev
    url: 'https://trustbloc.dev'
servers:
  - url: 'http://localhost:8070'
tags:
  - name: issuer
    description: issuer-related models and endpoints
  - name: verifier
    description: verifier-related models and endpoints
  - name: healthcheck
    description: server health check
paths:
  /healthcheck:
    get:
      summary: Health Check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
      operationId: get-healthcheck
      description: Returns server health check status.
      tags:
        - healthcheck
  /{profileType}/profiles/{profileID}/well-known/did-config:
    parameters:
      - schema:
          type: string
        name: profileType
        in: path
        required: true
        description: Profile Type
      - schema:
          type: string
        name: profileID
        in: path
        required: true
        description: Profile Id
    get:
      summary: Request did-config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DidConfig'
      operationId: did-config
      description: Returns did-config.
      tags:
        - devapi
  '/issuer/profiles/{profileID}/credentials/issue':
    parameters:
      - schema:
          type: string
        name: profileID
        in: path
        required: true
        description: Issuer Profile ID.
    post:
      summary: Issue credential
      tags:
        - issuer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: post-issue-credentials
      description: Issuer credentials.
  '/issuer/profiles/{profileID}/interactions/initiate-oidc':
    parameters:
      - schema:
          type: string
        name: profileID
        in: path
        required: true
        description: Issuer Profile ID.
    post:
      summary: Initiate OIDC Credential Issuance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOIDC4VCResponse'
      operationId: post-issuer-profiles-profileID-interactions-initiate-oidc
      description: Used by the issuer to initiate OIDCI credential issuance interaction in VCS. The response contains initiate issuance URL which can be used to initiate the flow from issuer applications.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateOIDC4VCRequest'
      tags:
        - issuer
  '/verifier/profiles/{profileID}/credentials/verify':
    parameters:
      - schema:
          type: string
        name: profileID
        in: path
        required: true
        description: ID of profile
    post:
      summary: Verify credential
      operationId: post-verify-credentials
      tags:
        - verifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCredentialData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCredentialResponse'
  '/verifier/profiles/{profileID}/presentations/verify':
    parameters:
      - schema:
          type: string
        name: profileID
        in: path
        required: true
        description: ID of profile
    post:
      summary: Verify presentation
      operationId: post-verify-presentation
      tags:
        - verifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPresentationData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPresentationResponse'
  '/verifier/profiles/{profileID}/interactions/initiate-oidc':
    parameters:
      - schema:
          type: string
        name: profileID
        in: path
        required: true
        description: ID of profile
    post:
      summary: Used by verifier applications to initiate OpenID presentation flow through VCS
      operationId: initiate-oidc-interaction
      tags:
        - verifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateOIDC4VPData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOIDC4VPResponse'

  '/verifier/interactions/authorization-response':
    post:
      summary: Used by verifier applications to initiate OpenID presentation flow through VCS
      operationId: check-authorization-response
      tags:
        - verifier
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id_token:
                  type: string
                  description: ID Token serves as an authentication receipt and includes metadata about the VP Token.
                vp_token:
                  type: string
                  description: VP Token includes one or more Verifiable Presentations.
                state:
                  type: string
                  description: State from authorization request for correlation
      responses:
        '200':
          description: Sucess
        '500':
          description: Failure

  /oidc/par:
    post:
      summary: Pushed Authorization Request
      tags:
        - oidc4vc
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushedAuthorizationResponse'
        '405':
          description: Method Not Allowed
        '413':
          description: Request Entity Too Large
        '429':
          description: Too Many Requests
      operationId: post-oidc-par
      description: Client sends OAuth authorization request directly to authorization server and gets request URI in response that can be used as reference to the data in subsequent request to authorization endpoint.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                response_type:
                  type: string
                  description: Value MUST be set to "code".
                client_id:
                  type: string
                  description: The client identifier.
                code_challenge:
                  type: string
                  description: 'A challenge derived from the code verifier that is sent in the authorization request, to be verified against later.'
                code_challenge_method:
                  type: string
                  description: A method that was used to derive code challenge.
                redirect_uri:
                  type: string
                  description: The authorization server redirects the user-agent to the client's redirection endpoint previously established with the authorization server during the client registration process or when making the authorization request.
                scope:
                  type: string
                  description: The scope of the access request.
                state:
                  type: string
                  description: An opaque value used by the client to maintain state between the request and callback. The authorization server includes this value when redirecting the user-agent back to the client. The parameter SHOULD be used for preventing cross-site request forgery.
                authorization_details:
                  type: string
                  description: The authorization_details conveys the details about the credentials the wallet wants to obtain. Multiple authorization_details can be used with type openid_credential to request authorization in case of multiple credentials.
                wallet_issuer:
                  type: string
                  description: Wallet's OpenID Connect Issuer URL. The Issuer will use the discovery process to determine the wallet's capabilities and endpoints. RECOMMENDED in Dynamic Credential Request.
                user_hint:
                  type: string
                  description: An opaque user hint the wallet MAY use in subsequent callbacks to optimize the user's experience. RECOMMENDED in Dynamic Credential Request.
                op_state:
                  type: string
                  description: 'String value identifying a certain processing context at the credential issuer. A value for this parameter is typically passed in an issuance initiation request from the issuer to the wallet. This request parameter is used to pass the  op_state value back to the credential issuer. The issuer must take into account that op_state is not guaranteed to originate from this issuer, could be an attack.'
              required:
                - response_type
                - client_id
                - code_challenge
        description: ''
  /oidc/authorize:
    get:
      summary: Authorization Request
      responses:
        '302':
          description: Found
          headers: {}
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: REQUIRED. The authorization code generated by the authorization server. The authorization code MUST expire shortly after it is issued to mitigate the risk of leaks.
                  state:
                    type: string
                    description: REQUIRED if the "state" parameter was present in the client authorization request. The exact value received from the client.
                required:
                  - code
      operationId: get-oidc-authorize
      description: 'OAuth 2.0 Authorization Request, which requests to grant access to the Credential endpoint.'
      parameters:
        - schema:
            type: string
          in: query
          name: response_type
          description: Value MUST be set to "code".
          required: true
        - schema:
            type: string
          in: query
          name: client_id
          description: The client identifier.
          required: true
        - schema:
            type: string
          in: query
          name: code_challenge
          description: 'A challenge derived from the code verifier that is sent in the authorization request, to be verified against later.'
          required: true
        - schema:
            type: string
          in: query
          name: code_challenge_method
          description: A method that was used to derive code challenge.
        - schema:
            type: string
          in: query
          name: redirect_uri
          description: The authorization server redirects the user-agent to the client's redirection endpoint previously established with the authorization server during the client registration process or when making the authorization request.
        - schema:
            type: string
          in: query
          name: scope
          description: The scope of the access request.
        - schema:
            type: string
          in: query
          name: state
          description: An opaque value used by the client to maintain state between the request and callback. The authorization server includes this value when redirecting the user-agent back to the client. The parameter SHOULD be used for preventing cross-site request forgery.
        - schema:
            type: string
          in: query
          name: authorization_details
          description: The authorization_details conveys the details about the credentials the wallet wants to obtain. Multiple authorization_details can be used with type openid_credential to request authorization in case of multiple credentials.
        - schema:
            type: string
          in: query
          name: wallet_issuer
          description: Wallet's OpenID Connect Issuer URL. The Issuer will use the discovery process to determine the wallet's capabilities and endpoints. RECOMMENDED in Dynamic Credential Request.
        - schema:
            type: string
          in: query
          name: user_hint
          description: An opaque user hint the wallet MAY use in subsequent callbacks to optimize the user's experience. RECOMMENDED in Dynamic Credential Request.
        - schema:
            type: string
          in: query
          name: op_state
          description: 'String value identifying a certain processing context at the credential issuer. A value for this parameter is typically passed in an issuance initiation request from the issuer to the wallet. This request parameter is used to pass the  op_state value back to the credential issuer. The issuer must take into account that op_state is not guaranteed to originate from this issuer, could be an attack.'
      tags:
        - oidc4vc
    parameters: []
  /oidc/token:
    post:
      summary: Token Request
      tags:
        - oidc4vc
      operationId: post-oidc-token
      description: Issues access token and optionally a refresh token for the exchange of authorization code that client has obtained after successful authorization response.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: Bad Request
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: Value MUST be set to "authorization_code".
                code:
                  type: string
                  description: The authorization code received from the authorization server.
                code_verifier:
                  type: string
                  description: A cryptographically random string that is used to correlate the authorization request to the token request.
                redirect_uri:
                  type: string
                  description: 'REQUIRED, if the "redirect_uri" parameter was included in the authorization request, and their values MUST be identical.'
                client_id:
                  type: string
                  description: 'REQUIRED, if the client is not authenticating with the authorization server.'
              required:
                - grant_type
                - code
                - code_verifier
        description: ''
components:
  schemas:
    HealthCheckResponse:
      title: HealthCheckResponse
      x-stoplight:
        id: 7jusxlmcr31g5
      x-tags:
        - healthcheck
      type: object
      properties:
        status:
          type: string
          description: Status is "success" if server is up and running.
        currentTime:
          type: string
          format: date-time
          description: Current time of the server.
      required:
        - status
      description: Response model for health check status.
    DidConfig:
      title: DidConfigResponse
      x-tags:
        - devapi
      type: object
      properties:
        "@context":
          type: string
          description: context.
        linked_dids:
          type: array
          items:
            oneOf:
              - type: string
              - type: object
          description: Presentation in jws(string) or jsonld(object) formats
      description: DID Config response.
    VerifyCredentialData:
      title: VerifyCredentialData
      x-tags:
        - verifier
      type: object
      description: Model for credential verification.
      properties:
        options:
          $ref: '#/components/schemas/VerifyCredentialOptions'
        credential:
          oneOf:
            - type: string
            - type: object
          description: Credential in jws(string) or jsonld(object) formats.
      required:
        - credential
    VerifyCredentialOptions:
      title: VerifyCredentialOptions
      x-tags:
        - verifier
      type: object
      description: Options for verify credential.
      properties:
        challenge:
          type: string
          description: Chalange is added to the proof.
        domain:
          type: string
          description: Domain is added to the proof.
    VerifyCredentialResponse:
      title: VerifyCredentialResponse
      x-tags:
        - verifier
      type: object
      description: Model for response of credentials verification.
      properties:
        checks:
          type: array
          items:
            $ref: '#/components/schemas/VerifyCredentialCheckResult'
    VerifyCredentialCheckResult:
      title: VerifyCredentialCheckResult
      x-tags:
        - verifier
      type: object
      description: Verify credential response containing failure check details.
      properties:
        check:
          type: string
          description: Check title.
        error:
          type: string
          description: Error message.
        verificationMethod:
          type: string
          description: Verification method.
      required:
        - check
        - error
        - verificationMethod
    VerifyPresentationData:
      title: VerifyPresentationData
      x-tags:
        - verifier
      type: object
      description: Model for presentation verification.
      properties:
        options:
          $ref: '#/components/schemas/VerifyPresentationOptions'
        presentation:
          oneOf:
            - type: string
            - type: object
          description: Presentation in jws(string) or jsonld(object) formats.
      required:
        - presentation
    VerifyPresentationOptions:
      title: VerifyPresentationOptions
      x-tags:
        - verifier
      type: object
      description: Options for verify presentation.
      properties:
        challenge:
          type: string
          description: Challenge is added to the proof.
        domain:
          type: string
          description: Domain is added to the proof.
    VerifyPresentationResponse:
      title: VerifyPresentationResponse
      x-tags:
        - verifier
      type: object
      description: Model for response of presentation verification.
      properties:
        checks:
          type: array
          items:
            $ref: '#/components/schemas/VerifyPresentationCheckResult'
    VerifyPresentationCheckResult:
      title: VerifyPresentationCheckResult
      x-tags:
        - verifier
      type: object
      description: Verify presentation response containing failure check details.
      properties:
        check:
          type: string
          description: Check title.
        error:
          type: string
          description: Error message.
      required:
        - check
        - error
    IssueCredentialData:
      title: IssueCredentialData
      x-tags:
        - issuer
      type: object
      description: Model for issuer credential.
      properties:
        options:
          $ref: '#/components/schemas/IssueCredentialOptions'
        credential:
          oneOf:
            - type: string
            - type: object
          description: Credential in jws(string) or jsonld(object) formats.
      required:
        - credential
    IssueCredentialOptions:
      title: IssueCredentialOptions
      x-tags:
        - issuer
      type: object
      description: Options for issuing credential.
      properties:
        verificationMethod:
          type: string
          description: The URI of the verificationMethod used for the proof. If omitted first ed25519 public key of DID (Issuer or Profile DID) will be used.
        created:
          type: string
          description: The date of the proof. If omitted system time will be used.
        challenge:
          type: string
          description: Chalange is added to the proof.
        domain:
          type: string
          description: Domain is added to the proof.
        credentialStatus:
          $ref: '#/components/schemas/CredentialStatusOpt'
    CredentialStatusOpt:
      title: CredentialStatusOpt
      x-tags:
        - issuer
      type: object
      description: Options for issuing credential.
      properties:
        type:
          type: string
      required:
        - type
    AuthorizationDetailsParam:
      title: AuthorizationDetailsParam
      x-tags:
        - oidc4vc
      type: object
      description: Model for the credential details the wallet wants to obtain.
      properties:
        type:
          type: string
          description: JSON string that determines the authorization details type. MUST be set to openid_credential for this flow.
        credential_type:
          type: string
          description: JSON string denoting the type of the requested Credential.
        format:
          type: string
          description: JSON string representing a format in which the Credential is requested to be issued. Valid values defined by this flow are jwt_vc and ldp_vc. Issuer can refuse the authorization request if the given credential type and format combo is not supported.
        locations:
          description: An array of strings that allows a client to specify the location of the resource server(s) allowing the Authorization Server to mint audience restricted access tokens.
          type: array
          items:
            type: string
      required:
        - type
        - credential_type
    PushedAuthorizationResponse:
      title: PushedAuthorizationResponse
      x-tags:
        - oidc4vc
      type: object
      description: Model for Pushed Authorization Response.
      properties:
        request_uri:
          type: string
          description: The request URI corresponding to the authorization request posted. This URI is a single-use reference to the respective request data in the subsequent authorization request.
        expires_in:
          type: integer
          description: 'A JSON number that represents the lifetime of the request URI in seconds as a positive integer. The request URI lifetime is at the discretion of the authorization server but will typically be relatively short (e.g., between 5 and 600 seconds).'
      required:
        - request_uri
        - expires_in
    InitiateOIDC4VPData:
      title: InitiateOIDC4VPData
      type: object
      properties:
        presentation_definition_id:
          type: string
        purpose:
          type: string
    InitiateOIDC4VPResponse:
      title: InitiateOIDC4VPResponse
      type: object
      properties:
        authorization_request:
          type: string
        tx_id:
          type: string
      required:
        - authorization_request
        - tx_id
    AccessTokenResponse:
      title: AccessTokenResponse
      x-tags:
        - oidc4vc
      type: object
      description: Model for Access Token Response.
      properties:
        access_token:
          type: string
          description: The access token issued by the authorization server.
        token_type:
          type: string
          description: The type of the token issued.
        expires_in:
          type: integer
          description: The lifetime in seconds of the access token.
        refresh_token:
          type: string
          description: 'The refresh token, which can be used to obtain new access tokens.'
        scope:
          type: string
          description: 'OPTIONAL, if identical to the scope requested by the client; otherwise, REQUIRED.'
        c_nonce:
          type: string
          description: String containing a nonce to be used to create a proof of possession of key material when requesting a credential.
        c_nonce_expires_in:
          description: Integer denoting the lifetime in seconds of the c_nonce.
          type: integer
      required:
        - access_token
        - token_type
    InitiateOIDC4VCRequest:
      title: InitiateOIDC4VCRequest
      type: object
      description: Model for Initiate OIDC Credential Issuance Request.
      properties:
        credential_template_id:
          type: string
          description: 'Template of the credential to be issued while successfully concluding this interaction. REQUIRED, if the profile is configured to use multiple credential templates.'
        client_initiate_issuance_url:
          type: string
          description: 'URL of the issuance initiation endpoint of a Wallet. Takes precedence over client_wellknown request parameter. If both client_initiate_issuance_url and client_wellknown are not provided then response initiate issuance URL will contain custom initiate issuance URL in format openid-initiate-issuance://.'
        client_wellknown:
          type: string
          description: String containing wallet/holder application OIDC client wellknown configuration URL.
        op_state:
          type: string
          description: 'String value created by the Credential Issuer and opaque to the Wallet that is used to bind the sub-sequent authentication request with the Credential Issuer to a context set up during previous steps. If the client receives a value for this parameter, it MUST include it in the subsequent Authentication Request to the Credential Issuer as the op_state parameter value. MUST NOT be used in Authorization Code flow when pre-authorized_code is present.'
        claim_endpoint:
          type: string
          description: Claim endpoint of the Issuer from where credential claim data has to be requested after successfully acquiring access tokens.
        grant_type:
          type: string
          description: Issuer can provide custom grant types through this parameter. This grant type has to be used while exchanging an access token for authorization code in later steps. If not provided then default to authorization_code.
        scope:
          type: array
          description: Contains scopes that issuer expects VCS to use while requesting authorization code for claim data. Defaults to openid.
          items:
            type: string
        response_type:
          type: string
          description: Contains response type that issuer expects VCS to use while performing OIDC authorization request. Defaults to token.
        authorization_details:
          type: string
          description: Customizes what kind of access Issuer wants to give to VCS.
      x-tags:
        - issuer
    InitiateOIDC4VCResponse:
      title: InitiateOIDC4VCResponse
      type: object
      description: Model for Initiate OIDC Credential Issuance Response.
      properties:
        initiate_issuance_url:
          type: string
          description: OIDC4CI initiate issuance URL to be used by the Issuer to pass relevant information to the Wallet to initiate issuance flow. Supports both HTTP GET and HTTP Redirect. Issuers may present QR code containing request data for users to scan from their mobile Wallet app.
        tx_id:
          type: string
          description: To be used by Issuer applications for correlation if needed.
      required:
        - initiate_issuance_url
        - tx_id
      x-tags:
        - issuer
  securitySchemes: {}
