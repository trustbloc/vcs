// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"XVfj8K/4x0/vP/3/AAAA//9j/nqqAVgBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
