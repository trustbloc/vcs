// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
