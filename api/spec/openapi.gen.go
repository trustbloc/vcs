// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NQ7/in/89P7T/w8AAP//64DXSMZIAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
