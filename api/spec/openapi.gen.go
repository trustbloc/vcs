// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"zlmNw7/iHz99+PT/AwAA//9p2X/CokgBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
