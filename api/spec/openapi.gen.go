// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x963Ibt9Lgq6C4WxW7lqTsXM75ov2ziqQkzHEsfbrYdSp2saAZkIQ1HEwAjGh+KW3t",
	"a+zr7ZNsoQHMADOYGyUqPif6lVjE4NLobvS9/xhFbJ2xlKRSjA7/GIloRdYY/vcoiogQV+yWpBdEZCwV",
	"RP05JiLiNJOUpaPD0a8sJglaMI70cATjkf1gOhqPMs4ywiUlMCuGYXOphtWnu1oRpEcgGIGoEDmJ0c0W",
	"SfVTLleM0//CajgShN8RrpaQ24yMDkdCcpouR/fjkTdwHhOJaSLqy12c/uf17OL0BG1WJEXBj1CGOV4T",
	"STiiAuWCxEgyxMnvOREStofTiCC2QBhFhEtMU3TMSUxSSXGC1M4QFigmC5qSGNEUXZIItv/d9PX09RTN",
	"JPr1+vIKvT27QjdEr8DkivANFQR+pgLhFGHO8Vatw24+kUiKccO0f1djfrv48fj7b77/20cFHSrJGg7/",
	"3zlZjA5H04OIrdcsnW7xOvlvByUCHJjbPzhyIXFioHdfwBm2ov4dzVOWRgG0uISbQBFLFUDU/2IEQxXw",
	"7CklQxEnWBKEUcaZOtoCZUwIIoQ6CVugW7JFaywJV7CESzKQ11NGBaCDWGC2NyefM8qJmNMAxs1SSZaE",
	"o5ikDGZVeJbQBZF0TRRcBYlYGgu1G/WTmdNZj+oZ1IJtC121z+tifXhyThaciFUb6ZghepYx2qxotEIR",
	"Tl2QsxvA0ZRsvDVFEIIiYlnges/Or2Znb4/ejBFdIApXEClkZ3AU+MheVEm8UUJJKv9nidxjZOkvuDZs",
	"a67/HDoskJaBnsssApMB9H7PKSfx6PA3nwd5C30cjySVifo2xP6KiTUNjsajzxOJl0JNymgcfRvR0cf7",
	"8egouj3lnPFmvnkU3SLeyCSJ+rj+EcyJnL91H1XP5B3rdpfjXOjbHHqQkkDhn1VOFGY+UWZWm0myrrOd",
	"ygndJarn1Hvuf0xv4cBRvd9rl3ZH0gCArhw0VSxmQSP9fMH4IObDL3NvmuqsP+drnE44wTG+SQg6ujye",
	"zZAkn6XipHc0Bv4Yx1QNxwmi6YLxNaw7LjgBFoIKCRtzXqyZIiKFZXckUcdTvCpPY8KFxGlsOSRsEckV",
	"lohFUc55kO7GIyBJPtc8YkFJAKvPMrtJvXI5NjijC8M5jcMYOTvpJo3qRAbugEQevtyPRz9gGa1KIDVS",
	"QykOnc1OjtGN+swFrmGKbYQyN2P6E0x9X/1pplzNoZ2G0/alo9rn3cIjQOuHOrQa+UqT4PHL5dlbJJ5G",
	"+jh+uPQB26WPKYJ4V6vB52MSS8nZYnT42x+1HffHMj1v5Z5H9x8H4Z3dXBviDXyoyk+PWbqgy5wDdYvL",
	"PMsYlyTELVIjUGtmpn+8IQKJjESKPxRgd6V6NTTMN4VeSriqQQB/E0zXAYXkR8bRWrD5OmYRwmmM7qL/",
	"IeLJp41EdxFiabKdojO9XQ+7E8XI2QKleE0O7nCSE5RhyoWSAQkniOBoBT+W3FUo+VltA+EbluvjiFzP",
	"zRYLwrVa4Z9yipTkpRcwciVOQaBDIo9WFpQvUi35xVhiRY15JHNOxMsxYtzTZZyPXAG0ZLwOxoCuQ+1z",
	"2FuXKTd/Uk7gzyzoUsFxjpPlHM4m5qIFY+zmIywIEiQVVNI7YriO0MhhwGzU1mTJOJWrtSgxx6BLLogS",
	"wJHaAvzdKLw+bymIty4kVzUyvs0kW3KcrWg0v6HwYs/XRK5Y/IinWrFNFf+pQDcsT2OrBZTPuCWg0zSe",
	"XAvC0WbFLKdVp/cxbNBxYyqyBG+DZF1XmB1aYB4R6U2YyVBJqnbnBdwcjRPerVLnT3C6zPGShBTuLrw0",
	"hwidj0VhBchjFAVrMGq3vSb7llTsEVXLwW+zy7Pp6/949fqbyXcfg0+ZFh4DUEbue1tdVn+lYUiFA7ox",
	"olMyHaNPGzm/i+afhHpuOUribH4XTdEJyYiWNFnqTgSkOYa/VK9vkXNgQiQhawVlfTy7EW2ESWP0ghlZ",
	"M9m+RBnmkkZ5grnmgxoJnAv+9eifdgX42hGiDc8EMmAF4vjfByHJeBySgQvq04qy4srArTU30sSneDzs",
	"cW35Mkym/m+LxIrlSaz4sdlMqXe/x0lC5DC6AoEIVOIK0yh1inPvQWvD9HM1mVKDymdYobavBPR7g5VE",
	"Bnt7IV72eYWDb0qDUaMdmbVRQ798ZmEq2t5/xR5gjItn7chxF8kwpQekAEPqMVEvB5YeqoMx8tghN5/e",
	"V1Jm4vDgQL3OkuPolvApJXIxZXx5ELPoYCXXyUHM8UJO1N8nDOdyNdE7mNxFk1evO5UrwzEc2a5TNrNE",
	"Xb7z01bBT6uLFbnvpHwQfInrBke3S64eqHnEEm1dqV1AwiKckIaflqwL0d+oMUpFxevwJEpBb1k+50ng",
	"7/chGNpzNgCoET4zI5X+TIVkfHuCJa6jXOtwxEnGiQAuW2GYhci70sPNE2yYcqvSG1LkXeIKmwidCYBX",
	"NShYhSQQ+Q+hGMYUQZEzzgEsAxzktBiATrAkjQYRBaOGKSzA2ycIPSGzXtaTjLMFTcj8jnARNCyZac71",
	"OGTGhQ20HKcCR42GmKvy914GGR8dipMGrjnIViq4WlgPhjORC21GP7rDNME3CeljwXCQ9TpTd9viA7sj",
	"nC6omvlcUxLgjGNUamMy71o/rsK0fakgHPX2G3XvCqT6GcIGmsD2p+q1GSLNk+pqOlpNrmr+StUhamjp",
	"49CGJeOAQO9XJC0ef997OHYl2vJXJV/idKudI+6CZqSVhMpPhOc2NCy5i0tampiTFDRFH8I97T6n5bct",
	"usGPjvTvvRIadI2+GiN8dm3rl/dXIFc2vI9DbZY7mCt7GSpxFJFMAsNv8Nv5Yqdn1dFeLZHfCHWaVCbb",
	"qhfPM0JqhCiRQZssvfcZpUwiTmTO0wbgP1tWuy2rXWbUCsP82EIlLlS9XS488glahYa7RgL2AZzWJy81",
	"K607IppGSR4TYRVPHN2mbJOQeAmSncvTe6kFHjA/hul3Z9Nvk3m6Tb40ImrdBXHRw7UZmNnaJYL3NhB1",
	"vsBb7Zb9bIRA0CaF0QlZEM5JjAp515lwiq7AXgRmEPU/GpqlPdqyW0QXDfr/BguUp+AalQzR9ZrEFEuS",
	"bDVYWqzaVLQyXLs8icA66qy8oXIFPxdnc348TeOM0VQOEYLbCaOK3bvTyaknCgTNMg6/d41g6im0gkTd",
	"1NgSA5YsA5zw/SnCybI0lg+Yvu5BT6PwCiSNHmeFT5vbPuDCSNB0mRCU5TcJjeDhw0qm/OX9PzRu7byH",
	"CuKoDY0BtPr4rdjj3PljIE6Lf60dg7QZdbMiIPZ2eNRKmTXgklMCdCP3BkMyy9RnV28uQ/jY2+8TdLup",
	"vSjs+u3ix+O/f/f6bx/dvTrenxcKwfVKL+3g//jouBeMybbrXJadKMZE0ojFVY6GGG+BBgiOv7y/slv4",
	"/uNAQ0gaPRG8FLn+W8DLHG5eUmwVXD8wlhCcmmdI63vwWrZTh5lQ2+KciB+XWFzkN3bpMJNBM303xVMo",
	"ufW4tKzsLAXM7I7wbRCO6m7UUciCceJKIqC46MAl4k53S7ai7oRGRrmrb3eBE2H2a2c++ieKVkyQAozU",
	"hkj5O4elGFcKksNrb/Sl1CMIQxyjgTDC99+TPT+KUfxSYpmLVgFYwJD6Uy2KTxuw/I+OZ8lMYIYHT33p",
	"DRl6rLNMNsWUaSeM+haUVk8I94/Z7yxdR1Bb6XmKE5JxEmFJ4mO2zpggZ7OT42+PZ1V9xY4aHQIpVo5Z",
	"zjJF14KgA73CgbHyioM/zP/NTu6L/3+nTbr3B0q35VrkFgeAXViSiXrzJ5He1BSVNg/9JwVIs9VWgLZp",
	"Rxd4g9SpEyJJ1aEOcRCKT0S5kGxtQtBDRkgazyVZZ0nYjH4SMDzZ4Wq3aZ6AadfCte6ovSOc05jMm+zt",
	"Z2aACVtsmbRgIs6sJtJmHgeVJzu1s3kbmhPTuN9SGeFKzpqrI0VSsSUa47CUf66HIj0UlUP7rOSY33og",
	"deAiTz9HK5wuiZd0cMxi0sO4TPS3IF3kcoXgaV9wtrbBpOC6DIRfUZLKORZC/Y01RNPrZwXeJhsGIDdM",
	"CQJijATJMMdGBsHow+h/fxihaIUVQRGuNcoF5UKC4ECFEwKPsJREaEu8+lU/WNoU1TLynJ2r0WGLWOVA",
	"DWHzl9qKbKQFHRVUhgPncqUj+SXx9pBliY1ZNrE9oTwc9OLd8eVLfXCWJltHSive5w+jnKeHlMjFIdix",
	"xSHcz6FeaVJsf6K2f/hpIyf2lxIOH0Y6KSaNYadOSJXZ7zoX0j9MrtmWQjD09fQVOipnm/yA1fGP9adH",
	"5VfqYBpAbQAPui31XLMTwNB3x5faXOxw23BkSDZXe+rxDBUjnaeok4h6vkst8zSZxQvxbv1QsmzM2tpf",
	"BpP8bO6w4+WHYf3gPczr+BORxt1IYs990cb2lkRK7X8yX7a+xaUPcJ45TsD6AqVrEbneQjWjtV+PbraS",
	"dNoimlZ0ANh87jbAmQO3Qk5kjwc6fVHXF7OgBOwc05d3cLrVFt77jwNAFbnPZLlyD6CJrDfUZkbOs4bX",
	"hrCchwRK/5onkmZJTWfExrUSCIWex8FAlAsDKLi5c04mltwUy1Y85ceEbaYlj70k/I5GBOFICoQFOjuH",
	"LzdaF3QeMtEs2Dixx7AzYmwHIUaP6RrZ3+3pjXYM3E4HnDpSnLZpQ1j0CgvjNCu9yHghdSR1RIRY5Emy",
	"RThSIABOWs3W65RhjRTf5UrtIbZVI7FbMpOcS3d/aPdLW09eyEV2op7wiitTOAGPEUsFjQlXF67niV2G",
	"FSulRtI16diCDdpqPA0M6AhCMhpGOBzG/BjSTJzoAbRZ0YT4SBAxcNVo+zAVnixRJFGOrTvE6HnGdQI0",
	"rSW8XD3SljgDipEIW5kt9+nJOh5gsui5wnGJ10/Eo/auzX5ZtFAqvwE8tj8WlkQl6VKSgHuunORSK6xT",
	"dGnt9wbNaLrsx71C+3lMZTy0wP71cmfVP0FFfzoato+IptUeurz90ETX6O9C9FnYf/srEBWmbqiRCLRR",
	"fOKWpjEETesXtvAhQ4grQ0t6B27kd8eXrbqg2f+8CPE08bz+4tcXb9yoDjiQ+RSygh1xAtvYfXSFb4lA",
	"6plW0IgIUghrFN75hiTJbco2RRBNGSQGJvIbplSwlk1qFlWdDHNIWLbWcjDdp47v3V5XcQp1sg1NksJa",
	"orlew0iaFjEuGUlpPCkskHbY4cFBG7yLnfYpP6FFwIMVS4A7OiYNwDZjOigPH3nUcH3xJryTloeomn70",
	"4CepV1bRwBc0oBEvOU5lg/3IUEaE08JbY+4YvtJB1UiuOMuXq0oApInqKAc6EjCYoLTc45oOUr8WDCRc",
	"eZYnsCtA8hXIzZJkIMKQNF+Dl8ZjB2rwaNxggYJtabNTxskEF3qG/uxjh8EmiH4mTRJC4UKuSgNNRXws",
	"w7/nxJrXjO/KxppaA90N1f4z9eZMTISKa+hSELEcoIhGqa8nGcJAGuSzRIJIlGcozmHHGSd3lOXCgNL6",
	"1wx1KO5D7yAiVh/NTXHRlzxG1HjzTHCR+rdx4JVhNVU7m+Hn9vgBEGmDpYW4EzcLG5nWK+jQFHmmGa0u",
	"LhK20eJT4JIVqNvCaIvY2TBtFDFfBYcEJDeXCMcgnzPgBEpfNeK4RnojCFjnSgXLbRwWOiELnCf6UaoW",
	"iums2VLsD34X/TbmRmXWKQ/cQoVG6+9PM/VhfvJcED7PaJuXvKdFoJczvXJ411KlX1+1H3Q+e4twwtS3",
	"lqZsjStTAyqFOFcXnwx41FZGIRlQv0bFYxwXr3FzWMAiwUvhWL3tQZRwkrrRcwj0QzOx4jpl/l8PuTAs",
	"te0m+g2X+f4VZD3fWtXXP3sI/tkmaZumQhIcT9GXZ/B65AP+2TazZ+H9WXiv2xeiTtP3Fy3NhwtBNJtr",
	"H5umH8Pi+8h72sFQNn2Y1Xh/QN3F8PzIu/nXtF0/K7PPyuyzMvuszD4rs39pZfahWmx3PnAfNbYpGQpq",
	"rTmxH2HFw8bchsVx5+ExnLlkjxkWiowTcqfeKjf5psKgWWByuPXSgwfKyM9XV+fop9Mr4PXwjwsSUw6+",
	"Pr2sQGsoo6WzkP/zQmOQI9Bbxg5KnQKgQk5dB009x6AHyhWhHK3ZjSLd94VCG85G/Bz2uHtgsezXUYpN",
	"YDPnJDECzwKlhMQNudGWpAPuOZ9iNNh+IinRIaJnV+co0zpTAdvujK4gZozrsWhNCLsLvr87tyVhKh5w",
	"kIyuL95cKtUkXN3G5TllAYYfaSIJ71Ekqu3jxtlncXgrObeOmfCTErAUvTHJSUYIdF8WXTxJuPk1pmRY",
	"aYcApP1Zq6iSIR1Lp13RfR+NJhZmLqXtPu/McqEbdTlYiw3NMdcFCGx20h0lGZzOfPyx8WxtlUaAZp2y",
	"HsEosZIPm0ewNTGhofLmZaEaGlVeyV0LEzoc0DfagzhaA4loij5txAsNxJeIcfRJsDSJX+iZXhrTitgh",
	"V3yvQVp7j5A6roMZQSWggLqijZpd9hMffUxWkE9oAQzryzjDsz84GSlaqdcuXYaAvcIJTpcg3uM4JkW1",
	"Taiz0WTmwsH8zKsVQbGj0+splJrE1lQqlia2QpI1gmIZYBs0r2mHOa1MN+tXV6ZMnoKKl2scemFP4O8D",
	"zq05on7of4VA/jAIri9mFgL1T8oU7TCEdIYHib/+7rvX37s53myBTmYn6IUROlhZUetkdvKyC5rN+GmR",
	"rCeKFlVy6g/6Rrb0Q6ELVJaAROT3HCcCRRs5RZd0mSr15P2VUmSL8i5QmLEo8dKQMT94xU/Oir8MXxEK",
	"imZDF9VfTdEbmt6SGEHNOwBix/Kd7pVyqeYtTXU1oMtARRi9tPp8io5zznV9CllPtykHKnL56tNGftUt",
	"bDqbc57qAn/6Vgl4Y8okVhPs5VySz7Kh6iHtsDqBDFbUesVAstpN5OgvSnFwinQkbMkCZQJmRXxgOzjU",
	"phw4wLH61VqENKPzokpXk7gC+rdCIqdat6siOXW+lHaX0yQ23g7GSdimgl5c/Hj8t79/+/1LrZRq1gMf",
	"GQOnVghNKKFxEoJdwJ8P7IfTpqw5Gha5za+CRJyEL7pmc2q29gyQmN1b81dws7Sq+7NrOXdcvbieLPac",
	"kwzz7mpDpZRqvgj1O9hDdwizWrnMDzgc+NWkRA+s4qinGXf1mGgA2zCggzdZMeijBkWm6wq0OxpYvG9h",
	"HR52sL8ctZbMwE5D7rsyh1WpNtrO82EUsZh8GLVbXB+JBkPZir2u73FQodt41wMXGgsZecjQnCmkWfFX",
	"osKMfa5LmmtEVRva8X6lQqsczan/qubT9zKXMgkZtLS0WtSdhORZ7bC4unoTrpCX5WJF4nlwr8Ohc350",
	"0Q6TXgwLqhEaCx9BeRaxdd0BwNsqPdXs24uEbQYRupZQrNkj/jFhG9AzW+0nxSWPm9BsXPDahlvtT3HD",
	"LIa1J0XLeImxVOzyGvUgzx7v5KM+YQHoDXyngrCCA4cMyP4wpMbplOoQ34kpSSN9nWG19oMa9GFkXFrG",
	"2xkXpnXjBg0ifDD35USTkm4paLz9jlmsdH9DE5BBXSR2rxS7wsBwGiqr/gy/Gn/7IAgUVt35w2rnXth5",
	"uoroNlQvL9tCQCxCN4R2fLP18uMKXlXg20YPgNS7co8LIvKkn7jWqzfYPuq0ljhaw/1/lVKsY1DU500n",
	"1MpltfB0mDokD7Tcubq4PkV04cZrmoLDWyIRtsXU7caNrf7s3Pbx1SE1YBmznuEy0FUyU7mzWlDZxihV",
	"yvsXcQsvQuU41Qv+skeZLy8jvwCIC0YLjTbiMPjdnzzavWg+tkPmpRgorztbbVmrt78p0OClqQ6kb8pZ",
	"E4kBUcoWZI7xqmd/Fx8e2o71J3b0CjSAKQ13u7PoHufycLB2I33RLxerkGLaR6nOxaqiOpmPmyW2L0ud",
	"biq009RQ3IV4B9wGgJ/Ew3VY+Ky33tpWON3Uo0/z9Q2EFmFZ7fhSFFA38og1P15fzNya6lDmNmOGloya",
	"qOtDuV+U5dgFMpQUUxFx4hZ6DRacusmlfi7kNqMRTpKtzgxIsFoxgaZYXKIXZLqcjtENkRtCUvQdxK38",
	"7dUru9GXTe22td4aNE9XDwEapoK2jnMNVckqwvuZgHp98NoByERRJXiSC2jiTTgxNfUr9aa9wJl6KGI4",
	"1K5T33GP6jUxr+B3E2L2dQ6Y2jUmaaX+lgn9w2mjpcCmu7SbBcKlz8ynlg33qPQ4rm3IgUflLAF3jz9i",
	"ZsKeG0/d26BbWbnr4bDTfwxucUmFJBwMRbpuWUff8rKIWhFHq6Yw8eLQbXx4X/NLXSJbN7HWc0DEmL6c",
	"cIFvNWrXFtnOOMtg9KqFtzcmN/lyGV68q8N6J1D7k0ttosZXuP1emh0L2ikSjuyoANB0qYC+hMyLpdaK",
	"v3kjSt88SeMJeJdMQLbHndqSg4Is9/rijd0CxLNuyA3K8JI4Dc/rlcU79HwQRCPZpnlbGbB4A3VC0lZo",
	"wyJ8jzLCsqToS0AVtArpTy8/dh4pssY0QTiOOTRAHRZWXGY0tO26RAc/l8GvlKheniRhmyLDogj1tEUb",
	"xSGq5x2M0S5pB8OO+WlzK5pKK34ltIjyntygf5AtuiQSxSzKQf81TUK1ncpr7xrZj8swjXB/SLV2Jw7a",
	"V9p656Pg1l788v4fL70N7rI1vwth59aMzGakCCVdgDPcRrG00EPGEhpt+y0AL6LQCRgrn1NknN7haIv0",
	"dOXdVHLmbBPhmGQJ28IIxpc4LcPyk0Q37s0FEWPECUBsDAKckhETJohAGeECQjIhbj9ssNDxyepgbVRj",
	"icGO19mDs4IHVCBYZuuC1QNIqtD+6mTjkOIwWvA8av2o3kvbqBN+hFPIizB/bfBDBZjBcEJuSOC4DDSS",
	"EhmOyKQsrGu7BTitV5uPUmsi1Zn5K9hCbjAPhyIeoTylv+deG2uD/aBPoOvr2clLhIXQ0Ukm7N5sKiZ3",
	"JFHvLGIc2XU0cYsV4UVIui88GbgDTXnWBotbdiL93sbbFK/Nk8KNqNBgJy+O2tj28ch2egwc2Ef7chvF",
	"SDjLBxegDb5luI3CgaXdVeuG2LzCdl7UIQ4V5y02p42BbbibspSMkRcGMlfKWPVvN1jQaIrespQUCWtq",
	"FcOb9WCBXqSgZiKcZWJs8xTUP15aDo9TsH6u8B1Ud+ZEiiKt6DC4aBhm4sEMWRK+BveBUQZKlly52wqH",
	"1ql1Sm3JwaaqsyTEimaFOu0JeqbBgzebPwCst0JTq2U7/hPaHg7ZIhM/SKzuLG4M8VolmZWmS0ghMWmR",
	"VSm8I4YqWDe6o4FrMYGuhRcHywRe0TUwd42IrsRXEvcGi7przW1390WqBmV4WRB4+mdjXCnKjruJUZBV",
	"XJaWsJv0i5+zEEvp3FVr5cbGK9HfakOWnkA9Gq+UTEHNnxUX0T+1XtWz2vSsNj2rTc9q07Pa9Kw2PatN",
	"z2rTs9r0l1ebvGCWejKEp0W04pkvQX3sUMgGOzr6hMn1aC1aZmM/t6kN5WeHmsP2A37P8IVLIt1ptKNS",
	"YunW/+6Xj/2WbEyO/bSjXv4Oic5d9eA6kpODMcTDU6WHNIO2ZAvAcm6vE+APvzgbnFkJte5oAD445tqf",
	"r98Rh8TVXUrGd+oxJyTjgxvMsTicrtOay/N0mQZOZFNREsyCuxVODwT2gB5iu4C9pZtX1/GGZUBcZzGW",
	"pJrC3ohMrcOLoB4heR5p2SJXH6jTvztubM1aModgbY6HZ+Q7+UINK/gdRbsD6srZat+O/fMEdu/gaDv4",
	"e97hO91Dg5yX+EDinjzB9t/QZeZqxbKUQJfRdPrcePK58eQX33gyVCIylJ+EKlg+sETWtVJkDFF0cYlw",
	"zUpD/J10+3D67w643ZUB9KxaXlSo8DQ+7yOnbqRTVtO+JUUFNzD6R4QDF3HzSrYZQViY0lZQY/LS2O6+",
	"m76evgZcr1WiZHJF+IZCq3htCK+XRh43TPt3Nea3ix+Pv//m+799DNVA3k+Md7UYj85ibc59DpkKC6Na",
	"5bLNB0Msew05il7Rw7i7NlwpwBV7qKUtdmN4X1IpmlS6GSPNOl17ASP4yRQ7DeYftpcAav6QOjG2/SNo",
	"i8jc+/Ho95yEUpscunEBgP5TDQ/op5XL0rMWBxs7AHI27V5cK7wD6jB8sHXKOK9IdNuUV6cHB7OlHFvK",
	"AtMk5wRFaipkmE6oWBWJbkP3rL6C8zTH79Y/g0BZtCZC4CXZuazTO2dM81ta1bXhIHZnwYWqN9QA8N55",
	"U9VJusrbOTfm7m5Yv8KnKUTXs0BbFQJuhbaGRLyWSxhWJbFp7db6bXdV2tl3+bZHqod23wy1PiXFWgHX",
	"R14qOIyXpim68FhRVf9SN21E2ZYG2XiggSBxmXUfDuwVaf6X4cGtfLNGnU0weQBou9ikB9Z2BBvEptw9",
	"FIzKL0wbVJzKzeyN4dY1qGDT9QZYPuAuhjDNrNJTfgeh8c/nm6HDPwB+Q3nnANzeiXk2kWs3+wyeqjdk",
	"3pMk+UfKNulZRtLZic6l7uhI3/1NNXPVdJb1RxjggoCFBTFe1nfHl9q+BImss5Pz3as/OU2jzs6/Eq49",
	"yDNnnbZFGt5gGa3cciS91qtlzn8l6mXninVtTuobrfjnQpvjVlJmAgGeaMvGr0f/LAyTGeNyjDIsV/AT",
	"qDqOaaJENLdu6rghrT9mRFeMMCY8GNa83yFdnSoFAMpK3ufenfazj3soJMoc+/vxzg3JQyU/museuPYd",
	"c23M84ZD+JqxWaR4TQ6cMpNjUzyT4GilY3YhBbkeuWO2VtpTa5Vn7IHiLiftztj69Hja6Ru28GmtKdGr",
	"aUfLBXMic576paLdtV3zX1q3jRdWQtvew3A5p7mN7gDC1ZVrk7ZazKxfJ9ZYB+CUJvUFTryYg3CL86aG",
	"7VcN190V/f6gckxtEQ4VItY1Yx6F34YK0DwSKo/3xXNb9xyuGSayBG979c7z+E+VbZmJUPnUahN2fePQ",
	"QaswbSu9OjcKSy95xzEbmL23h423ETsEL+tjeqGZlgPD01+8+j9BQOvVthadSaGBp1vbpr9Z2Ss4tTOu",
	"vnVm+eKRNLzZHi4ufas4Zel2zXIx10GvnRdsWbrDLgMdmGysHq50VgJ2i4NtnnQhE7liuVQYbVN1tEvT",
	"Mt52luuGxA4QRU90MKx1Q164gbWtEPWDqx+PNrx5H5E8tJPk8fb5mym1/TEYZk2F9U3vuFuIjp7bHLPG",
	"OHDbVA8jURTJN9T6y/urkqnWCapIX3PqjGNRj7hrCkIeouVoOmhFp+bI0wfdWVsItHDkWghDp6IWDX1S",
	"0t6HUcpSUzN5h0prvXTVIU65e/B3LZiONoN8KqiwssY0GR2OViRJ2P+SPBfyJmHRNCZ3o/FIhyWOrtSf",
	"f0hYhCTB6yn0kYSPFEM/PDjwP6spNeXnoCQbjuzoBoVyohi/a6QwARHvvzlG744nR+cztxmdhsy376AE",
	"sGQRc3v6HFhrgRvOoL8rW8IlNCLGlmJOepThaEUmX09f1Q652WymGH6eMr48MN+Kgzez49O3l6fqm6n8",
	"rC0fNbecS1G2shCEoWjHkY6GGr2aqoXBG0JSnNHR4eib6SvYi3oYAYUOzPkco/iBKMK1MtYcTiZckJdB",
	"YkpswrY11uicCSd6UphQqqK61Q8s3loMIpqqnaibg09CC9VaZuqSqNqjsu7v7513A0739atXgxavellr",
	"mHn2DyA6ka/XmG+7IFWnqXFxHUvO8kwc/AH/nZ3cB+7n4A/939nJvdrcMpSWekEkp+TOxD31uK+fSPC6",
	"MqefxG8NjWx/Uls1sbZU/V3hWEn05iQj11KsG5XUAFwaP+vvjj5xeAlR/tp/jY9PjhQ9LqUNNRwGJA5M",
	"h99SvNTBXTaIKky/p+ajYBvSapBrURC9jix2npZo3X3Qeeeyj0DqO65vXtA+WLDbJQzBjUwXgp2AUDVR",
	"0hZgyX9NnPL9YQQxJWStEBVsTeFKbk7vO6+GfuA90DM3NFzYB7b06vWwZ4zpV/2+D9b0bRyyE554URsN",
	"T79JgSyiOx32ZeVWNw7Qb9RuerEbR4jf5bUJVbyi9/tEkHKdJ8KGaoHmQffvtQLY/aYn4Nd5vPuG6Sq1",
	"sHe8+Hprnj3efnWxR0CB3bojNfo7++NG1WE1CENysarIEp2vRQ1HTMqt20AFKlWAMOy119ZGKY+BOVEm",
	"FbRoqHC8L8ToKKjcjCFd19RYpnrIRQnJ+DCpDzKPxENlvq70rH1cRfuae+bWHQlbfQhzF8gPwQWTDEAm",
	"vp25Ax9sdLZozCDInZQJHwt65EDsAxE6l90zLnQHtPdBh/6A70ACk8ImDv4oEtvu9W+x88SLNutAzuvm",
	"WXiaV1RxmG396svBduzPeujogYAfaFp1gjgLY7JpX3KzRUt6R1JkwLKDT65yNp3EusObbJWlDhAHch5a",
	"TS62PVqTJcRNdHyAuaXYqvSyqe2aNq/ALAp91gfN7+W0N8xaSctsMeR0UcYffsqnb1ODD4FZ9jB1leCf",
	"7h3+znJm4+1rlgmtg2xg4TdiVm1o32DirXSJ3pdMFmqW/qfYdWEjKOorYvdDR+9Nh9MLMsFpPLEJ+ROr",
	"OD3jaYMK4vjBJUMWbqCVzIIeItebQyHq0nYI8aPhRTlZ8e31xRunZpBNUXTXVdtROq4n5zm4GKAmWzvB",
	"DfYDTLC8eF+kZdZVoPr2ePZEAlVlVXNUZ/FuSnTvGJkJQs/t45NoQZaMxtEzSf6FSPKvQIuDVJoKFT4F",
	"9XGdRPtMdw10V9KcgZRLbDrORg1zKTCuW3uaah/ty9LTVU5q38aejlpPIVq4rVp7iPTLo2noW7C1kUEr",
	"9k83JEkmtynbpAcsIyl1lfxJGehcqPoZJxGWJTKFlX87FcQC1ZnfGfzssz4bOTTa4030SMgZon+/O75E",
	"s5PzQAbOF6x+V5jI4/MQhXpKeDkojFCNtqKmpCEDYFsf2TAFqGepC+cWFV2robVuYfMKztE4KuxrXdEn",
	"78piRTcECQKuhg9QVsxEywWMCl6Y58Mu6SpU3b5pXbcG5gPWPEJFtiKKCa/0lWYxQUW4mg3RFLDBtLkx",
	"4NjUpzVfxggvlZAlUYJly4FYTOZuOYkHncoUZoI9b3BZVUafUZ+sWKzflsoCogPvNFjqyZaY1qE7uSB8",
	"gpemhL9XEdytRV34wDJO7ijLRbJFREisywrHJhGmaUnTocCp8+SVH844A/piXOcNrvGtHd7YjTFMEWWx",
	"7eHA0kHItlmmpviOBXWF6WEIkiKW4d9zW6HM66tQtFJYY6pTAKBAjVfx1nqpcRqjCCfJDY5utXIRBH3R",
	"61qW7RxMwWpzuwbSDiKoKX1s0AuUmQeXP59dvzkplBOTMX5nehREnAkxEVSWu10wvjR1XoKALOrw9Abk",
	"aaqIJC4zY5rztyKW3pGtMDlY+m9OkwbHCq/+rStIog02JY3ZjbqJKfo1TyTNksZFHGVNU8NWoROIHnM/",
	"kqC4Qu/CaKp7J7MFWtulKkbLEOjC1bAGgVJH/34lTPiwki1SEkkb53598Ubfv/k39NOwCSwxFRG7g7wU",
	"Q8XA6yTha5oSB6BfKRBl+IYmFDKSFP4Wdcen6OL0+OzXX0/fnpyeKEgUSRWuENpKi7bwpxZ/dqRJcFqt",
	"wNdfYsKvR/+E4ypyLPvEWtrTOJJJuqb/RQpK+kog8jkjnJI0Io9wOqgJpzY2GhhrCozXJBy6ffKLpC9z",
	"bbYkPvksbW3+imGD8Ck6MlOVfbndAmpln5EMC6Erl5mG/MYqAhq228m3ePFLVa+EvEnD4NVgPbdYm1oJ",
	"PjEz6JJeZpseI6uf5qpcF+oOSnwLphum2D/LbRlxWyfMtuJf5lhJhURvgHG6pKn62ZyFmp5AfIwiliex",
	"4go4RVhKxakb7tfd/E5X7CRU6f7wRZ8VnS+AvfL66hjVBgKh56OlImRHOUgaT3RWm/7zxPIJfJMQUxjy",
	"w8imcBOhpF0rV34Y1RNzC5YJ5fJ+vro6v0Q3UP3x+uJNuHX0B6enD9SdbGmDXeTG4YQTHG915XxTZ7Ps",
	"UQWIWrYesP11qO4FwU1MdOU7hRV65P/7P/9XoFIDRgkr6060StpzDcrRkBjwb1593aLIfp5sNpvJgvH1",
	"JOcJ0W+pr9mGqzGHayyGBBDdeISkpKi02o5lga9BIzINnaARebJFeAFoAahtfOVKYKKSLq1tlFNxq57R",
	"hODbhgYc4cKGRclIujAoBAM9hFQyvSmIYZHTSZGqy6pwNvIZRzbvm5OIVLSdvt0HbBXPLl/fjyxP44oV",
	"AawGXXG2ZUeBQq2uFs1oDsa5ais0oe9KlKKN42lVcGRp4OMi5V6RfZZxdlci0mkaT6Aeap6BCuHUdIFk",
	"ZwgoQkdajtfpc14jLWDUelJdgayuvz9N9GZllSeyEtZWLSzlY3/WjQw6mgsU7bZfAea1BHQGkK4Pus00",
	"QkU+HtlkEp3aXqn7qpMTw5e993t+8it+wtvte680zh7ZQPzI5uB3Xz8bhP9dDMJuOYcnYyNHkULehMRL",
	"sibpvoJIj6LbVibybcD4fasEn28fEZuPoluoc9jmZYUBIY7hFp5o5xkZ5s23V/QsTWOb6RUUw5A2diVb",
	"Wyy/pgLgNEZLIkt18/pipjCh7GcHapVj5cGibHVolQ4dwukZCux8tYXbnQfnuViR+EFJZoOF/J6V1Wum",
	"t39zs9uQBgKNrpRAB1jP7XD4ZThIOrbZ2DNvB8dHa2Ofv64dqzA3fck2rNZGp2Gq+Dd2RrWX9gmmrbT7",
	"e8NdFcJw7fBb9bV9PDumwo1YVsFKPV+Yy6CxDVpD6cB/OY9Pu2GsGgrhten0n9mQ+awuP79+1BTMmhjX",
	"LC8fc4JNAcVvX30XqGisH9m3TKIj3TIahr7+prGLLTpNJZVbdMUYeoP5ksAHX38fYCaMoV9xurVwFyG5",
	"XZ9nF0Oisb25snwtZ1oNCMNqbzJvQwX3owqvN0oAjAZZRimreZLgm4RYpTRcHb69uWbrOu7QHsvReA6a",
	"aUDJPTEm0LIcs1FqnZpeYJjONAMvuHPhxygl93fnerJpnz01CnSFtBHW16CUNOO28W+wjUnWdFy7w/IY",
	"LCXqRV8zDpYHW4LKLbgtepznvhf3CGRQX+aKU6pdfxf6+UfdpKBaecnIhiK/WdO6f8HqpcxVBDjLlyv0",
	"7viySox3mUuM9pFtjpVTxG5HwW2scBonukOwLfddhp+rp8StmqKlAKae3ZwglpuiKkWMXkPZBKX4Xtit",
	"ddirnKaWZekWJ/W4Ka7qYeYr66Fti2LZvXDTN6+CjNwAJMCOHWC1sN6CTFpNYG7ferg/3dkBFCFcRGDr",
	"n603tLCTVa0A+mZcV/QKC6PUK70TvHgihyUXedKA3GEMAdre34vQot1bB+HYeghLNzt4jx2GakvyNTo9",
	"+3DPsNe1wVtadyw+aN150VwgZJrg20yyJcfZyqjKHKcxW3tt4R311rJy0qxIWcFeGl9dIft17rasMNxb",
	"1fKNSS2KV6/Ojh5a2C+AxfXZfrvqXEO5D94HNd+0efLiDjuQ6ZdPuS27akGkrSuR9ol27l1+HgwSvbT+",
	"LuRNdxSAs8WiF8JW1AEHHz72f7AfySauGBowqK7ko8IYXyl6j2NU2vZrDN8riNzO9VsdbdrmoYn7OffI",
	"e201YASKtUaq37/UKcZrmH7B3t8dXzay2pB8oxfQros9OYjsIrBpvVKrw+j1flfuqfC+2ucuOn1VHZRn",
	"pzSIUFxfmAKNuNRKhI3C94DitGbDTp5X72KnT1iAo07Rj07Qj1GY4+kqrvaN24BbPbrDFJ6/7icl6Pp9",
	"y5DBqApe/0RkIddrBKv0yHTjCGyyKgQSNLBOEEBNkbQYvTCfkPhle/mNn4hFYBJ7oSTPaPwEaPz4r0/4",
	"Pi/I7/sWv5oWFlnPwJreCFynCsX1rcrkp3lXaxGW7erChlBoGvdsBn02gz6bQbdONYDCyumWuvALcmhv",
	"lhcMDCpn2C7qdE9sJt4/5GeoXZ9gunYEtqoUpkP/Z86XUN54DwXlYCduQTlXSsxtu4sd6vx3gXlJpC26",
	"UNjxjDPdWJjduifTMKC73vQT8GSXpdrCD6wp0zYwKrC44OGl1XT71W5l+cQ64gsouvX79iacvKushu6e",
	"QG+ul1CrNoHeVw21YNPyfdfNbGpw3atcZrXleQ8utP9qTn9dZC3qBNE4cnj2U9RCenf+FNhaWXIQsj75",
	"e9sP091VHoEh/yko/mewY1e42ys/rvVEfxKOHOyZPYAnZz54QriqPgODrsawsgfW4cFBwiKcrJiQh//x",
	"6u+vRupCzBRVnNAe6ol2g8VozWKSVIKiqvnAozpm2X31nKc4RsCTrePwVgQncoWg03n5nf6r/uP9x/v/",
	"HwAA//+8NaAm4zQBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
