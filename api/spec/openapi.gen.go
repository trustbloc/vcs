// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"nNU4/Cv+8dOHT/8/AAD//2KN5y20SAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
