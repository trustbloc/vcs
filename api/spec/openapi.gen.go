// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x963Ibt9Lgq6C4WxW7lqTsXM75ov2ziiQnzLEtfbrYdSp2saAZkIQ1HEwAjGh+KW/t",
	"a+zr7ZNsoQHMADOYGyUqPif6lVjE4NLobvS9/xhFbJ2xlKRSjA7/GIloRdYY/vcoiogQV+yWpBdEZCwV",
	"RP05JiLiNJOUpaPD0RsWkwQtGEd6OILxyH4wHY1HGWcZ4ZISmBXDsLlUw+rTXa0I0iMQjEBUiJzE6GaL",
	"pPoplyvG6X9hNRwJwu8IV0vIbUZGhyMhOU2Xoy/jkTdwHhOJaSLqy12c/uf17OL0BG1WJEXBj1CGOV4T",
	"STiiAuWCxEgyxMnvOREStofTiCC2QBhFhEtMU3TMSUxSSXGC1M4QFigmC5qSGNEUXZIItv/D9OX05RTN",
	"JHpzfXmF3p5doRuiV2ByRfiGCgI/U4FwijDneKvWYTefSCTFuGHav6sxv128Ov7xux//9lFBh0qyhsP/",
	"d04Wo8PR9CBi6zVLp1u8Tv7bQYkAB+b2D45cSJwY6H0p4AxbUf+O5ilLowBaXMJNoIilCiDqfzGCoQp4",
	"9pSSoYgTLAnCKONMHW2BMiYEEUKdhC3QLdmiNZaEK1jCJRnI6ymjAtBBLDDbm5PPGeVEzGkA42apJEvC",
	"UUxSBrMqPEvogki6JgqugkQsjYXajfrJzOmsR/UMasG2ha7a53WxPjw5JwtOxKqNdMwQPcsYbVY0WqEI",
	"py7I2Q3gaEo23poiCEERsSxwvWfnV7Ozt0evx4guEIUriBSyMzgKfGQvqiTeKKEklf+zRO4xsvQXXBu2",
	"Ndd/Dh0WSMtAz2UWgckAer/nlJN4dPibz4O8hT6OR5LKRH0bYn/FxJoGR+PR54nES6EmZTSOvo/o6OOX",
	"8egouj3lnPFmvnkU3SLeyCSJ+rj+EcyJnL91H1XP5B3rdpfjXOjbHHqQkkDhn1VOFGY+xWozSdYhtqOI",
	"guOoytv9w1Qh4W6lCg99tuHggA2GQOL+XrvcO5IGAHnloLNiRQsa6WcOxgcpBH6Ze9NUZ/0lX+N0wgmO",
	"8U1C0NHl8WyGJPksFce9ozHw0TimajhOEE0XjK9h3XHBMbAQVEjYmPOyzRSxKWy8I4k6nuJpeRoTLiRO",
	"Y8tJYYtIrrBELIpyzoP0OR4B6fK55iULSgLYf5bZTeqVy7HBGV0YzmkcxtzZSTcJVScycAck8jFuPPoJ",
	"y2hVAqmRakqx6Wx2coxu1GcucA3zbCOouRnTn7Dq+6rRViPNlKs5tNNw2r50VPu8W8gEaP1Uh1Yj/2kS",
	"UH69PHuLxONIKcf3l1Jgu/QhRRXvajX4fExiKTlbjA5/+6O24/5Ypuet3PPoy8dBeGc314Z4Ax+08tNj",
	"li7oMudA3eIyzzLGJQlxi9QI3pqZ6R9viEAiI5HiDwXYXelfDQ3zTaGXEq4KEcDfBNN1QHF5xThaCzZf",
	"xyxCOI3RXfQ/RDz5tJHoLkIsTbZTdKa362F3ohg5W6AUr8nBHU5ygjJMuVCyIuEEERyt4MeSuwolZ6tt",
	"IHzDcn0ckeu52WJBuFY//FNOkZLQ9AJG/sQpCH5I5NHKgvJZqiXEGEusqDGPZM6JeD5GjHs6j/ORK6iW",
	"jNfBGNCJqH0Oe+s85eZPygn8mQVdKjjOcbKcw9nEXLRgjN18hAVBgqSCSnpHDNcRGjkMmI16mywZp3K1",
	"FiXmGHTJBVGCOlJbgL8bxdjnLQXx1oXpqubGt5lkS46zFY3mNxRe7PmayBWLH/BUK7ap4j8V6IblaWy1",
	"hfIZtwR0msaTa0E42qyY5bTq9D6GDTpuTEWW4G2QrOuKtUMLzCMivQkzGSpJ1e68gJujmcK7VdoGEpwu",
	"c7wkIcW8Cy/NIULnY1FYUfIYRcEajHpur8m+JRW7RdXC8Nvs8mz68j9evPxu8sPH4FOmhccAlJH73laX",
	"1V9pGFLhgG6M6JRMx+jTRs7vovknoZ5bjpI4m99FU3RCMqIlTZa6EwFpjuEv1etb5ByYEEnIWkFZH89u",
	"RBtr0hg9Y0bWTLbPUYa5pFGeYK75oEYC54LfHP3TrgBfO0K04ZlABqxAHP/7ICQZj0MycEF9WqFWXBm4",
	"teZGmvgUj4c9ri1fhsnU/22RWLE8iRU/Npsp9fP3OEmIHEZXIBCB6lxhGqVOce49aG2Yfq4mU2pQ+Qwr",
	"1PaVgH5vsJLIYG/PxPM+r3DwTWkwfrQjszZ+6JfPLExF2/uv2AOMcfGsHTnuIhmm9IAUYEg9JurlwNJD",
	"dTBaHjvk5tP7SspMHB4cqNdZchzdEj6lRC6mjC8PYhYdrOQ6OYg5XsiJ+vuE4VyuJnoHk7to8uJlp3Jl",
	"OIYj23XKZpaoy3d+2ir4aXWxIvedlA+CL3Hd4Oh2ydUDNY9Yoq0wtQtIWIQT0vDTknUh+ms1RqmoeB2e",
	"RCnoLcvnPAn8/UsIhvacDQBqhM/MSKW/UCEZ355gieso1zoccZJxIoDLVhhmIfKu9HDzBBum3Kr0hhR5",
	"l7jCpkRnAuBVDQpWIQlE/kMohjFFUOSMEwHLAAc5LQagEyxJo0FEwahhCgvw9glCT8isl/Uk42xBEzK/",
	"I1wEDUtmmnM9DplxYUMux6kw5rrQ/V2Vv/cyyPjoUJw0cM1BtlLB1cJ6MJyJXGhz+9Edpgm+SUgfC4aD",
	"rNeZutsWX9kd4XRB1cznmpIAZxyjUhuTedf6cRWm7UsF4ai336h7VyDVzxA20AS2P1WvzRBpnlRX09Fq",
	"clXzV6oOUUNLX4g2LBlHBXq/Imnx+PtexrEr0Za/KvkSp1vtRHEXNCOtJFR+Ijz3omHJXVzS0sScpKAp",
	"+hDuafc5Lb9t0Q1eOdK/90po0DX6dIzw2bWtX99fgVzZ8D4OtVnuYK7sZajEUUQyCQy/wb/ni52eVUd7",
	"v0R+I9RpUplsq94+zwipEaJEBm2y9N5nlDKJOJE5TxuA/2RZ7basdplRKwzzYwuVuFD1drnwyCdoFRru",
	"GgnYB3Ban7zUrLTuiGgaJXlMhFU8cXSbsk1C4iVIdi5P76UWeMD8GKbfnU2/TebpNvnSiKh1F8RFDxdo",
	"YGZrlwje20DU+QpvtVv2s5EEQZsURidkQTgnMSrkXWfCKboCexGYQdT/aGiW9mjLbhFdNOj/GyxQnoJr",
	"VDJE12sSUyxJstVgabFqU9HKcO3yJALrqLPyhsoV/FyczfnxNI0zRlM5RAhuJ4wqdu9OJ6eeKBA0yzj8",
	"3jWCqafQChJ1U2NLrFiyDHDC96cIJ8vSWD5g+roHPY3CK5A0epgVPm1u+4ALI0HTZUJQlt8kNIKHDyuZ",
	"8tf3/9C4tfMeKoijNjQG0Orjt2KPc+cPgTgt/rV2DNJm1M2KgNjb4VErZdaAS04J0I3cGwzJLFOfXb2+",
	"DOFjb79P0O2m9qKw67eLV8d//+Hl3z66e3W8P88UguuVntvB//HRcS8Yk23XuSw7UYyJpBGLqxwNMd4C",
	"DRAcf31/Zbfw48eBhpA0eiR4KXL9t4CXOdy8pNgquH5iLCE4Nc+Q1vfgtWynDjOhtsU5ET8usbjIb+zS",
	"YSaDZvpuiqdQcutxaVnZWQqY2R3h2yAc1d2oo5AF48SVREBx0YFLxJ3ulmxF3QmNjHJX3+4CJ8Ls1858",
	"9E8UrZggBRipDZHydw5LMa4UJIfX3uhLqUcahjhGA2GE778ne34Qo/ilxDIXrQKwgCH1p1oUnzZg+R8d",
	"z5KZwAwPnvrSGzL0WGeZbIop004Y9S0orZ4Q7h+z31m6jqC20vMUJyTjJMKSxMdsnTFBzmYnx98fz6r6",
	"ih01OgRSrByznGWKrgVBB3qFA2PlFQd/mP+bnXwp/v+dNul+OXDCLcUBYBeWZKLe/EmkNzVFpc1D/0kB",
	"0my1FaBt2tEF3iB16oRIUnWoQxyE4hNRLiRbm1D1kBGSxnNJ1lkSNqOfBAxPdrjabZonYNq1cK07au8I",
	"5zQm8yZ7+5kZYMIWWyYtmIgzq4m0mcdB5clO7WzehubENO63VEa4krPm6kiRVGyJxjgs5Z/roUgPReXQ",
	"Pis55rceSB24yNPP0QqnS+IlJxyzmPQwLhP9LUgXuVwheNoXnK1tMCm4LgPhV5Skco6FUH9jDVH3+lmB",
	"t8mGAcgNU4KAGCNBMsyxkUEw+jD63x9GKFphRVCEa41yQbmQIDhQ4YTKIywlEdoSr37VD5Y2RbWMPGfn",
	"anTYIlY5UEN4/aW2IhtpQUcFleHAuVzpiH9JvD1kWWJjlk1sTyhfBz17d3z5XB+cpcnWkdKK9/nDKOfp",
	"ISVycQh2bHEI93OoV5oU25+o7R9+2siJ/aWEw4eRTp5JY9ipE1Jl9rvOhfQPk2u2pRAMfTt9gY7K2SY/",
	"YXX8Y/3pUfmVOpgGUBvAg25LPdfsBDD03fGlNhc73DYcGZLN1Z56PEPFSOcp6iSinu9SyzxNZvFCvFvf",
	"lywbs7v2l+kkP5s77Hj5YVg/eA/zOv5MpHE3kthzX7SxvSWRUvufzJetb3HpA5xnjhOwvkDpWkSut1DN",
	"aO3Xo5utJJ22iKYVHQA2n7sNcObArZAT2cOBTl/U9cUsKAE7x/TlHZxutYX3y8cBoIrcZ7JcuQfQRNYb",
	"ajMj51nDa0NYzn0Cpd/kiaRZUtMZsXGtBEKh53EwEOXCAApu7pyTiSU3xbIVT3mVsM205LGXhN/RiCAc",
	"SYGwQGfn8OVG64LOQyaaBRsn9hh2RoztIMToMV0j+7s9vdGOgdvpgFNHitM2bQiLXmFhnGalFxkvpI6k",
	"jogQizxJtghHCgTASatZfZ0yrJHiu1ypPcS2aiR2S2aSc+nuD+1+aevJC7nITtQTXnFlCifgMWKpoDHh",
	"6sL1PLHLsGKl1Ei6Jh1bsEFbjaeBAR1BSEbDCIfDmB9DmokTPYA2K5oQHwkiBq4abR+mwpMlimTLsXWH",
	"GD3PuE6AprWEl6tH2hJnQDESYSuz5T49Wcc9TBY9Vzgu8fqReNTetdmvixZK5TeAx/bHwpKoJF1KEnDP",
	"lZNcaoV1ii6t/d6gGU2X/bhXaD8PqYyHFti/Xu6s+ieo6I9Hw/YR0bTaQ5e3H5roGv1diD4L+29/BaLC",
	"1A01EoE2ik/c0jSGoGn9whY+ZAhxZWhJ78CN/O74slUXNPufFyGeJp7XX/z64rUb1QEHMp9CVrAjTmAb",
	"u4+u8C0RSD3TChoRQQphjcI735AkuU3ZpgiiKYPEwER+w5QK1rJJzaKqk2EOCcvWWg6m+9TxvdvrKk6h",
	"TrahSVJYSzTXaxhJ0yLGJSMpjSeFBdIOOzw4aIN3sdM+ZSq0CHiwYglwR8ekAdhmTAfl4SOPGq4vXod3",
	"0vIQVdOP7v0k9coqGviCBjTiJcepbLAfGcqIcFp4a8wdw1c6qBrJFWf5clUJgDRRHeVARwIGE5SWe1zT",
	"QerXjIGEK8/yBHYFSL4CuVmSDEQYkuZr8NJ47EANHo0bLFCwLW12yjiZ4ELP0J997DDYBNHPpElCKFzI",
	"VWmgqYiPZfj3nFjzmvFd2VhTa6C7odp/pt6ciYlQcQ1dCiKWAxTRKPX1JEMYSIN8lkgQifIMxTnsOOPk",
	"jrJcGFBa/5qhDsV96B1ExOqjuSku+pLHiBpvngkuUv82DrwyrKZqZzP83B4/ACJtsLQQd+JmYSPTeqUd",
	"miLPNKPVxUXCNlp8ClyyAnVbGG0ROxumjSLmq+CQgOTmEuEY5HMGnEDpq0Yc10hvBAHrXKlguY3DQidk",
	"gfNEP0rVgjKdtV2K/cHvot/G3KjMOuWBW6jQaP39aaY+zE+eC8LnGW3zkve0CPRyplcO71qq9Our9oPO",
	"Z28RTpj61tKUrYVlakWlEOfq4pMBj9rKKCQD6teoeIzj4jVuDgtYJHgpHKu3PYgSTlI3eg6BfmgmVlyn",
	"zP/rIReGpbbdRL/hMt+/gqznW6v6+mcPwT/bJG3TVEiC4yn6+gxeD3zAP9tm9iS8PwnvdftC1Gn6/qql",
	"+XAhiGZz7UPT9ENYfB94TzsYyqb3sxrvD6i7GJ4feDf/mrbrJ2X2SZl9UmaflNknZfYvrczeV4vtzgfu",
	"o8Y2JUNBrTUn9iOseNiY27A47jw8hjOX7DHDQpFxQu7UW+Um31QYNAtMDrdeevBAGfnl6uoc/Xx6Bbwe",
	"/nFBYsrB16eXFWgNZbR0FvJ/XmgMcgR6y9hBqVMAVMip66Cp5xj0QLkilKM1u1Gk+75QaMPZiJ/DHncP",
	"LJb9OkqxCWzmnCRG4FmglJC4ITfaknTAPedTjAbbzyQlOkT07OocZVpnKmDbndEVxIxxPRatCWF3wfd3",
	"57YkTMUDDpLR9cXrS6WahKvbuDynLMDwiiaS8B5Foto+bpx9Foe3knPrmAk/KQFL0WuTnGSEQPdl0cWT",
	"hJtfY0qGlXYIQNpftIoqGdKxdNoV3ffRaGJh5lLa7vPOLBe6UZeDtdjQHHNdgMBmJ91RksHpzMcfG8/W",
	"VmkEaNYp6xGMEiv5sHkEWxMTGipvXhaqoVHlldy1MKHDAX2jPYijNZCIpujTRjzTQHyOGEefBEuT+Jme",
	"6bkxrYgdcsX3GqS19wip4zqYEVQCCqgr2qjZZT/x0cdkBfmEFsCwvowzPPu9k5GilXrt0mUI2Cuc4HQJ",
	"4j2OY1JU24Q6G01mLhzMz7xaERQ7Or2eQqlJbE2lYmliKyRZIyiWAbZB85p2mNPKdLN+dWXK5CmoeLnG",
	"oRf2BP4+4NyaI+qH/g0E8odBcH0xsxCof1KmaIchpDM8SPztDz+8/NHN8WYLdDI7Qc+M0MHKilons5Pn",
	"XdBsxk+LZD1RtKiSU3/QN7KlbwpdoLIEJCK/5zgRKNrIKbqky1SpJ++vlCJblHeBwoxFiZeGjPnBK35y",
	"Vvx1+IpQUDQbuqj+aope0/SWxAhq3gEQO5bvdK+USzVvaaqrAV0GKsLopdXnU3Scc67rU8h6uk05UJHL",
	"N5828ptuYdPZnPNUF/jTt0rAa1MmsZpgL+eSfJYNVQ9ph9UJZLCi1isGktVuIkd/UYqDU6QjYUsWKBMw",
	"K+ID28GhNuXAAY7Vr9YipBmdF1W6msQV0L8VEjnVul0VyanzpbS7nCax8XYwTsI2FfTs4tXx3/7+/Y/P",
	"tVKqWQ98ZAycWiE0oYTGSQh2AX8+sB9Om7LmaFjkNr8KEnESvuiazanZ2jNAYnZvzV/BzdKq7s+u5dxx",
	"9eJ6sthzTjLMu6sNlVKq+SLU72AP3SHMauUyP+Fw4FeTEj2wiqOeZtzVY6IBbMOADt5kxaCPGhSZrivQ",
	"7mhg8b6FdXjYwf5y1FoyAzsNue/KHFal2mg7z4dRxGLyYdRucX0gGgxlK/a6vodBhW7jXQ9caCxk5CFD",
	"c6aQZsXfiAoz9rkuaa4RVW18x/uVCq1yNKf+q5pP38tcyiRk0NLSalF3EpJntcPi6up1uEJelosViefB",
	"vQ6HzvnRRTtMejEsqEZoLHwE5VnE1nUHAG+r9FSzby8SthlE6FpCsWaP+FXCNqBnttpPikseN6HZuOC1",
	"Dbfan+KGWQxrT4qW8RJjqdjlNepBnj3eyQd9wgLQG/hOBWEFBw4ZkP1hSI3TKdUhvhNTkkb6OsNq7Qc1",
	"6MPIuLSMtzMuTOvGDRpE+GDuy4kmJd160Hj7HbNY6f6GJiCDukjsXil2hYHhNFRW/QV+Nf72QRAorLrz",
	"+9XOvbDzdBXRbaheXraFgFiEbgjt+Gbr5ccVvKrAt40eAKl35R4XRORJP3GtV2+wfdRpLXG0hvv/KqVY",
	"x6Coz5tOqJXLauHpMHVIHmi5c3VxfYrowo3XNAWHt0QibIup240bW/3Zue33q0NqwDJmPcNloKtkpnJn",
	"taCyjVGqlPcv4haehcpxqhf8eY8yX15GfgEQF4wWGm3EYfC7P3m0e9F8bIfMSzFQXne22rJWb39ToMFL",
	"Ux1I35SzJhIDopQtyBzjVc/+Lj48tB3rT+zoFWgAUxrudmfRPc7l4WDtRvqiXy5WIcW0j1Kdi1VFdTIf",
	"N0tsX5c63VRop6nxuAvxDrgNAD+Jh+uw8FlvvbWtcLqpR5/m6xsILcKy2vGlKKBu5BFrfry+mLk11aHM",
	"bcYMLRk1UdeHcr8oy7ELZCgppiLixC30Giw4dZNL/VzIbUYjnCRbnRmQYLViAk2xuETPyHQ5HaMbIjeE",
	"pOgHiFv524sXdqPPm9pya701aJ6uHgI0TAVtHecaqpJVhPczAfX64LUDkImiSvAkF9Dsm3BiaupX6k17",
	"gTP1UMRwqF2nvuMe1Wt2XsHvJsTs6xwwtWtM0kr9LRP6h9NGS4FNd2k3C4RLn5lPLRvuUelxXNuQA4/K",
	"WQLuHn/EzIQ9N566t0G3snLXw2Gn/xjc4pIKSTgYinTdso7+5mURtSKOVk1h4sWhK/nw/ueXukS2bmKt",
	"54CIMX054QLfatSuLbKdcZbB6FULb29MbvLlMrx4Vyf2TqD2J5faRI2vcPu9NDsWtFMkHNlRAaDpUgF9",
	"CZkXS60Vf/NGlL55ksYT8C6ZgGyPO7UlBwVZ7vXFa7sFiGfdkBuU4SVxGp7XK4t36PkgiEayTfO2MmDx",
	"BuqEpK3QhkX4HmWEZUnRl4AqaBXSn15+7DxSZI1pgnAcc2iAOiysuMxoaNt1iQ5+LoNfKVG9PEnCNkWG",
	"RRHqaYs2ikNUzzsYo13SDoYd89PmVjSVVvxGaBHlPblB/yBbdEkkilmUg/5rmoRqO5XX3jWyH5dhGuH+",
	"kGrtThy0r7T1zkfBrT379f0/nnsb3GVrfhfCzq0Zmc1IEUq6AGe4jWJpoYeMJTTa9lsAXkShEzBWPqfI",
	"OL3D0Rbp6cq7qeTM2SbCMckStoURjC9xWoblJ4lu3JsLIsaIE4DYGAQ4JSMmTBCBMsIFhGRC3H7YYKHj",
	"k9XB2qjGEoMdr7MHZwUPqECwzNYFqweQVKH91cnGIcVhtOB51PpRvZe2USf8CKeQF2H+2uCHCjCD4YTc",
	"kMBxGWgkJTIckUlZWNd2C3BarzYfpdZEqjPzV7CF3GAeDkU8QnlKf8+9NtYG+0GfQNfXs5PnCAuho5NM",
	"2L3ZVEzuSKLeWcQ4suto4hYrwouQdF94MnAHmvKsDRa37ET6vY23KV6bJ4UbUaHBTl4ctbHt45Ht9Bg4",
	"sI/25TaKkXCWDy5AG3zLcBuFA0u7q9YNsXmF7byoQxwqzltsThsD23A3ZSkZIy8MZK6UserfbrCg0RS9",
	"ZSkpEtbUKoY368ECPUtBzUQ4y8TY5imofzy3HB6nYP1c4Tuo7syJFEVa0WFw0TDMxL0ZsiR8De4DowyU",
	"LLlytxUOrVPrlNqSg01VZ0mIFc0KddoT9EyDB282fwBYb4WmVst2/Ce0PRyyRSa+l1jdWdwY4rVKMitN",
	"l5BCYtIiq1J4RwxVsG50RwPXYgJdCy8Olgm8omtg7hoRXYmvJO4NFnXXmtvu7qtUDcrwsiDw9M/GuFKU",
	"HXcToyCruCwtYTfpFz9nIZbSuavWyo2NV6K/1YYsPYF6NF4omYKaPysuon9qvaontelJbXpSm57Upie1",
	"6UltelKbntSmJ7XpL682ecEs9WQIT4toxTNfgvrYoZANdnT0CZPr0Vq0zMZ+alMbys8ONYftB/ye4QuX",
	"RLrTaEelxNKt/90vH/st2Zgc+2lHvfwdEp276sF1JCcHY4iHp0oPaQZtyRaA5dxeJ8Dvf3E2OLMSat3R",
	"AHxwzLU/X78jDomru5SM79RjTkjGBzeYY3E4Xac1l+fxMg2cyKaiJJgFdyuc7gnsAT3EdgF7SzevruMN",
	"y4C4zmIsSTWFvRGZWocXQT1C8jzSskWuPlCnf3fc2Jq1ZA7B2hz3z8h38oUaVvA7inYH1JWz1b4d++cJ",
	"7N7B0Xbw97zDd7qHBjkv8YHEPXmC7b+hy8zVimUpgS6j6fSp8eRT48mvvvFkqERkKD8JVbB8YImsa6XI",
	"GKLo4hLhmpWG+Dvp9v703x1wuysD6Fm1vKhQ4Wl83kdO3UinrKZ9S4oKbmD0jwgHLuLmlWwzgrAwpa2g",
	"xuSlsd39MH05fQm4XqtEyeSK8A2FVvHaEF4vjTxumPbvasxvF6+Of/zux799DNVA3k+Md7UYj85ibc59",
	"DpkKC6Na5bLNB0Msew05il7Rw7i7NlwpwBV7qKUtdmN4X1IpmlS6GSPNOl17ASP4yRQ7DeYftpcAav6Q",
	"OjG2/SNoi8jcL+PR7zkJpTY5dOMCAP2nGh7QTyuXpWctDjZ2AORs2r24VngH1GH4YOuUcV6R6LYpr04P",
	"DmZLObaUBaZJzgmK1FTIMJ1QsSoS3YbuWX0F52mO361/BoGyaE2EwEuyc1mnd86Y5re0qmvDQezOggtV",
	"b6gB4L3zpqqTdJW3c27M3d2wfoWPU4iuZ4G2KgTcCm0NiXgtlzCsSmLT2q312+6qtLPv8m0PVA/tSzPU",
	"+pQUawVcH3mp4DBemqbowmNFVf1L3bQRZVsaZOOBBoLEZdZ9OLBXpPlfhge38s0adTbB5B6g7WKTHljb",
	"EWwQm3L3UDAqvzBtUHEqN7M3hlvXoIJN1xtgeY+7GMI0s0pP+R2Exj+fb4YOfw/4DeWdA3B7J+bZRK7d",
	"7DN4qt6QeU+S5B8p26RnGUlnJzqXuqMjffc31cxV01nWH2GACwIWFsR4Wd8dX2r7EiSyzk7Od6/+5DSN",
	"Ojv/Rrj2IM+cddoWaXiDZbRyy5H0Wq+WOf+NqJedK9a1OamvteKfC22OW0mZCQR4oi0bb47+WRgmM8bl",
	"GGVYruAnUHUc00SJaG7d1HFDWn/MiK4YYUx4MKx5v0O6OlUKAJSVvM+9O+1nH/dQSJQ59l/GOzckD5X8",
	"aK574Np3zLUxzxsO4WvGZpHiNTlwykyOTfFMgqOVjtmFFOR65I7ZWmlPrVWesQeKu5y0O2Pr4+Npp2/Y",
	"wqe1pkSvph0tF8yJzHnql4p213bNf2ndNl5YCW17D8PlnOY2ugMIV1euTdpqMbN+nVhjHYBTmtQXOPFi",
	"DsItzpsatl81XHdX9Pu9yjG1RThUiFjXjHkQfhsqQPNAqDzeF89t3XO4ZpjIErzt1TvP4z9VtmUmQuVT",
	"q03Y9Y1DB63CtK306twoLL3kHcdsYPbeHjbeRuwQvKyP6YVmWg4MT3/x6v8MAa1X21p0JoUGnm5tm/5m",
	"Za/g1M64+taZ5atH0vBme7i49K3ilKXbNcvFXAe9dl6wZekOuwx0YLKxerjSWQnYLQ62edKFTOSK5VJh",
	"tE3V0S5Ny3jbWa4bEjtAFD3RwbDWDXnhBta2QtQPrn442vDmfUDy0E6Sh9vnb6bU9sdgmDUV1je9424h",
	"Onpuc8wa48BtUz2MRFEk31Drr++vSqZaJ6gifc2pM45FPeKuKQh5iJaj6aAVnZojT+91Z20h0MKRayEM",
	"nYpaNPRJSXsfRilLTc3kHSqt9dJVhzjlvoC/a8F0tBnkU0GFlTWmyehwtCJJwv6X5LmQNwmLpjG5G41H",
	"OixxdKX+/FPCIiQJXk+hjyR8pBj64cGB/1lNqSk/ByXZcGRHNyiUE8X4XSOFCYh4/90xenc8OTqfuc3o",
	"NGS+fwclgCWLmNvT58BaC9xwBv1d2RIuoRExthRz0qMMRysy+Xb6onbIzWYzxfDzlPHlgflWHLyeHZ++",
	"vTxV30zlZ235qLnlXIqylYUgDEU7jnQ01OjFVC0M3hCS4oyODkffTV/AXtTDCCh0YM7nGMUPRBGulbHm",
	"cDLhgrwMElNiE7atsUbnTDjRk8KEUhXVrX5i8dZiENFU7UTdHHwSWqjWMlOXRNUelfXlyxfn3YDTffvi",
	"xaDFq17WGmae/QOITuTrNebbLkjVaWpcXMeSszwTB3/Af2cnXwL3c/CH/u/s5Iva3DKUlnpBJKfkzsQ9",
	"9bivn0nwujKnn8RvDY1sf1ZbNbG2VP1d4VhJ9OYkI9dSrBuV1ABcGj/r744+cXgJUf7af42Pj44UPS6l",
	"DTUcBiQOTIffUrzUwV02iCpMv6fmo2Ab0mqQa1EQvY4sdp6WaN190Hnnsg9A6juub17QPliw2yUMwY1M",
	"F4KdgFA1UdIWYMl/TZzy/WEEMSVkrRAVbE3hSm5O7zuvhn7gPdAzNzRc2Ae29Or1sGeM6Vf9vg/W9G0c",
	"shOeeFEbDU+/SYEsojsd9mXlVjcO0G/UbnqxG0eI3+W1CVW8ovf7RJBynUfChmqB5kH377UC2P2mJ+DX",
	"ebj7hukqtbB3vPh6a5493n51sQdAgd26IzX6O/vjRtVhNQhDcrGqyBKdr0UNR0zKrdtABSpVgDDstdfW",
	"RimPgTlRJhW0aKhwvC/E6Cio3IwhXdfUWKZ6yEUJyfgwqQ8yj8R9Zb6u9Kx9XEX7mnvm1h0JW30IcxfI",
	"D8EFkwxAJr6duQMfbHS2aMwgyJ2UCR8LeuRA7AMROpfdMy50B7T3QYf+gO9AApPCJg7+KBLbvujfYueJ",
	"F23WgZzXzbPwNK+o4jDb+tWXg+3YX/TQ0T0BP9C06gRxFsZk077kZouW9I6kyIBlB59c5Ww6iXWHN9kq",
	"Sx0gDuQ8tJpcbHu0JkuIm+h4D3NLsVXpZVPbNW1egVkU+qwPmt/LaW+YtZKW2WLI6aKMP/yUT9+mBh8C",
	"s+xh6irBP907/J3lzMbb1ywTWgfZwMJvxKza0L7BxFvpEr0vmSzULP1PsevCRlDUV8Tuh47emw6nF2SC",
	"03hiE/InVnF6wtMGFcTxg0uGLNxAK5kFPUSuN4dC1KXtEOJHw4tysuLb64vXTs0gm6Lorqu2o3RcT85z",
	"cDFATbZ2ghvsB5hgefG+SMusq0D1/fHskQSqyqrmqM7i3ZTo3jEyE4Se24cn0YIsGY2jJ5L8C5HkX4EW",
	"B6k0FSp8DOrjOon2ie4a6K6kOQMpl9h0nI0a5lJgXLf2NNU+2pelp6uc1L6NPR21nkK0cFu19hDpl0fT",
	"0LdgayODVuyfbkiSTG5TtkkPWEZS6ir5kzLQuVD1M04iLEtkCiv/diqIBaozvzP42Wd9NnJotMeb6JGQ",
	"M0T/fnd8iWYn54EMnK9Y/a4wkYfnIQr1lPByUBihGm1FTUlDBsC2PrJhClDPUhfOLSq6VkNr3cLmFZyj",
	"cVTY17qiT96VxYpuCBIEXA0foKyYiZYLGBW8MM/7XdJVqLp907puDcx7rHmEimxFFBNe6SvNYoKKcDUb",
	"oilgg2lzY8CxqU9rvowRXiohS6IEy5YDsZjM3XIS9zqVKcwEe97gsqqMPqM+WbFYvy2VBUQH3mmw1JMt",
	"Ma1Dd3JB+AQvTQl/ryK4W4u68IFlnNxRlotki4iQWJcVjk0iTNOSpkOBU+fJKz+ccQb0xbjOG1zjWzu8",
	"sRtjmCLKYtvDgaWDkG2zTE3xHQvqCtPDECRFLMO/57ZCmddXoWilsMZUpwBAgRqv4q31UuM0RhFOkhsc",
	"3WrlIgj6ote1LNs5mILV5nYNpB1EUFP62KAXKDMPLn85u359UignJmP8zvQoiDgTYiKoLHe7YHxp6rwE",
	"AVnU4ekNyNNUEUlcZsY0529FLL0jW2FysPTfnCYNjhVe/VtXkEQbbEoasxt1E1P0Jk8kzZLGRRxlTVPD",
	"VqETiB5zP5KguELvwmiqeyezBVrbpSpGyxDowtWwBoFSR/9+I0z4sJItUhJJG+d+ffFa37/5N/TTsAks",
	"MRURu4O8FEPFwOsk4WuaEgeg3ygQZfiGJhQykhT+FnXHp+ji9PjszZvTtyenJwoSRVKFK4S20qIt/KnF",
	"nx1pEpxWK/D1l5jw5uifcFxFjmWfWEt7GkcySdf0v0hBSd8IRD5nhFOSRuQBTgc14dTGRgNjTYHxmoRD",
	"t09+kfRlrs2WxCefpa3NXzFsED5FR2aqsi+3W0Ct7DOSYSF05TLTkN9YRUDDdjv5Fi9+qeqVkDdpGLwa",
	"rOcWa1MrwSdmBl3Sy2zTY2T101yV60LdQYlvwXTDFPtnuS0jbuuE2Vb8yxwrqZDoDTBOlzRVP5uzUNMT",
	"iI9RxPIkVlwBpwhLqTh1w/26m9/pip2EKt0fvuizovMFsFdeXx2j2kAg9Hy0VITsKAdJ44nOatN/nlg+",
	"gW8SYgpDfhjZFG4ilLRr5coPo3pibsEyoVzeL1dX55foBqo/Xl+8DreO/uD09IG6ky1tsIvcOJxwguOt",
	"rpxv6myWPaoAUcvWA7a/DtW9ILiJia58p7BCj/x//+f/ClRqwChhZd2JVkl7rkE5GhID/t2Lb1sU2c+T",
	"zWYzWTC+nuQ8Ifot9TXbcDXmcI3FkACiG4+QlBSVVtuxLPA1aESmoRM0Ik+2CC8ALQC1ja9cCUxU0qW1",
	"jXIqbtUzmhB829CAI1zYsCgZSRcGhWCgh5BKpjcFMSxyOilSdVkVzkY+48jmfXMSkYq207f7gK3i2eXr",
	"e8XyNK5YEcBq0BVnW3YUKNTqatGM5mCcq7ZCE/quRCnaOJ5WBUeWBj4uUu4V2WcZZ3clIp2m8QTqoeYZ",
	"qBBOTRdIdoaAInSk5XidPuc10gJGrSfVFcjq+vvjRG9WVnkkK2Ft1cJSPvZn3cigo7lA0W77FWBeS0Bn",
	"AOn6oNtMI1Tk45FNJtGp7ZW6rzo5MXzZe7/nR7/iR7zdvvdK4+yBDcQPbA5+9+2TQfjfxSDslnN4NDZy",
	"FCnkTUi8JGuS7iuI9Ci6bWUi3weM37dK8Pn+AbH5KLqFOodtXlYYEOIYbuGJdp6RYd58e0XP0jS2mV5B",
	"MQxpY1eytcXyayoATmO0JLJUN68vZgoTyn52oFY5Vh4sylaHVunQIZyeocDOV1u43XlwnosVie+VZDZY",
	"yO9ZWb1mevs3N7sNaSDQ6EoJdID13A6HX4eDpGObjT3zdnB8tDb2+evasQpz09dsw2ptdBqmin9jZ1R7",
	"aZ9g2kq7vzfcVSEM1w6/VV/bx5NjKtyIZRWs1POVuQwa26A1lA78l/P4tBvGqqEQXptO/5kNmc/q8vPL",
	"B03BrIlxzfLyMSfYFFD8/sUPgYrG+pF9yyQ60i2jYejL7xq72KLTVFK5RVeModeYLwl88O2PAWbCGHqD",
	"062FuwjJ7fo8uxgSje3NleVrOdNqQBhWe5N5Gyq4H1V4vVECYDTIMkpZzZME3yTEKqXh6vDtzTVb13GH",
	"9liOxnPQTANK7okxgZblmI1S69T0AsN0phl4wZ0LP0Ypub8715NN++ypUaArpI2wvgalpBm3jX+DbUyy",
	"puPaHZbHYClRL/qacbA82BJUbsFt0eM8X3pxj0AG9WWuOKXa9Q+hn1/pJgXVyktGNhT5zZrW/QtWL2Wu",
	"IsBZvlyhd8eXVWK8y1xitI9sc6ycInY7Cm5jhdM40R2CbbnvMvxcPSVu1RQtBTD17OYEsdwUVSli9BrK",
	"JijF98JurcNe5TS1LEu3OKnHTXFV9zNfWQ9tWxTL7oWbvnsRZOQGIAF27ACrhfUWZNJqAnP71sP96c4O",
	"oAjhIgJb/2y9oYWdrGoF0DfjuqJXWBilXumd4MUTOSy5yJMG5A5jCND2/l6EFu3eOgjH1kNYutnBe+ww",
	"VFuSr9Hp2Yd7hr2uDd7SumPxXuvOi+YCIdME32aSLTnOVkZV5jiN2dprC++ot5aVk2ZFygr20vjqCtmv",
	"c7dlheHeqpZvTGpRvHp1dvTQwn4BLK7P9ttV5xrKffA+qPmmzZMXd9iBTL98ym3ZVQsibV2JtE+0c+/y",
	"82CQ6KX1dyFvuqMAnC0WvRC2og44+PCx/4P9QDZxxdCAQXUlHxXG+ErRexyj0rZfY/heQeR2rt/qaNM2",
	"D03cT7lH3murASNQrDVS/f6lTjFew/QL9v7u+LKR1YbkG72Adl3syUFkF4FN65VaHUYv97tyT4X3xT53",
	"0emr6qA8O6VBhOL6whRoxKVWImwUvgcUpzUbdvK8ehc7fcQCHHWKfnCCfojCHI9XcbVv3Abc6tEdpvD8",
	"dT8pQdfvW4YMRlXw+mciC7leI1ilR6YbR2CTVSGQoIF1ggBqiqTF6Jn5hMTP28tv/EwsApPYCyV5QuNH",
	"QOOHf33C93lBft+3+NW0sMh6Btb0RuA6VSiub1UmP827WouwbFcXNoRC07gnM+iTGfTJDLp1qgEUVk63",
	"1IVfkEN7s7xgYFA5w3ZRp3tiM/H+IT9D7foE07UjsFWlMB36P3O+hPLGeygoBztxC8q5UmJu213sUOe/",
	"C8xLIm3RhcKOZ5zpxsLs1j2ZhgHd9aafgCe7LNUWfmBNmbaBUYHFBQ8vrabbr3YryyfWEV9A0a3ftzfh",
	"5F1lNXT3CHpzvYRatQn0vmqoBZuW77tuZlOD617lMqstz3twof1Xc/rrImtRJ4jGkcOzH6MW0rvzx8DW",
	"ypKDkPXR39t+mO6u8gAM+U9B8T+DHbvC3V75ca0n+qNw5GDP7AE8OfPBE8JV9RkYdDWGlT2wDg8OEhbh",
	"ZMWEPPyPF39/MVIXYqao4oT2UE+0GyxGaxaTpBIUVc0HHtUxy+6r5zzFMQKebB2HtyI4kSsEnc7L7/Rf",
	"9R+/fPzy/wMAAP//oZPWngs1AQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
