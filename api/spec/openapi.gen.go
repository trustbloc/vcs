// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
