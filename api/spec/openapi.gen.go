// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"///izac2IgEBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
